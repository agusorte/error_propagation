% covariance of X Y Z, and T;
%Agustin


function [Cov_t]=Cov_position(P,cov_P)


if nargin<=0,
     P = [ 3.53553e+2  3.39645e+2  2.77744e+2 -1.44946e+6
             -1.03528e+2  2.33212e+1  4.59607e+2 -6.32525e+5
              7.07107e-1 -3.53553e-1  6.12372e-1 -9.18559e+2];
          
          cov_P=rand(12,12);
   
end;



 p11=P(1,1); p12=P(1,2); p13=P(1,3); p14=P(1,4);
 p21=P(2,1); p22=P(2,2); p23=P(2,3); p24=P(2,4);
 p31=P(3,1); p32=P(3,2); p33=P(3,3); p34=P(3,4);

 %cordinates homogeneus
J=[[ ((p22*p33 - p23*p32)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, - (p23*p34 - p24*p33)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p21*p33 - p23*p31)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,   (p22*p34 - p24*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) + ((p21*p32 - p22*p31)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, -(p22*p33 - p23*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),                                                                                                          -((p12*p33 - p13*p32)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, (p13*p34 - p14*p33)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) + ((p11*p33 - p13*p31)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, - (p12*p34 - p14*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p11*p32 - p12*p31)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,  (p12*p33 - p13*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),                                                                                                           ((p12*p23 - p13*p22)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, - (p13*p24 - p14*p23)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p11*p23 - p13*p21)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,   (p12*p24 - p14*p22)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) + ((p11*p22 - p12*p21)*(p12*p23*p34 - p12*p24*p33 - p13*p22*p34 + p13*p24*p32 + p14*p22*p33 - p14*p23*p32))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, -(p12*p23 - p13*p22)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)];
[(p23*p34 - p24*p33)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p22*p33 - p23*p32)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,                                                                                                             ((p21*p33 - p23*p31)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, - (p21*p34 - p24*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p21*p32 - p22*p31)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,  (p21*p33 - p23*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31), ((p12*p33 - p13*p32)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2 - (p13*p34 - p14*p33)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),                                                                                                          -((p11*p33 - p13*p31)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,   (p11*p34 - p14*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) + ((p11*p32 - p12*p31)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, -(p11*p33 - p13*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31), (p13*p24 - p14*p23)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p12*p23 - p13*p22)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,                                                                                                             ((p11*p23 - p13*p21)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, - (p11*p24 - p14*p21)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p11*p22 - p12*p21)*(p11*p23*p34 - p11*p24*p33 - p13*p21*p34 + p13*p24*p31 + p14*p21*p33 - p14*p23*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,  (p11*p23 - p13*p21)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)];
[((p22*p33 - p23*p32)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2 - (p22*p34 - p24*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),   (p21*p34 - p24*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p21*p33 - p23*p31)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,                                                                                                             ((p21*p32 - p22*p31)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, -(p21*p32 - p22*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31), (p12*p34 - p14*p32)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p12*p33 - p13*p32)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, ((p11*p33 - p13*p31)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2 - (p11*p34 - p14*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),                                                                                                            -((p11*p32 - p12*p31)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,  (p11*p32 - p12*p31)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31), ((p12*p23 - p13*p22)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2 - (p12*p24 - p14*p22)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31),   (p11*p24 - p14*p21)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31) - ((p11*p23 - p13*p21)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2,                                                                                                             ((p11*p22 - p12*p21)*(p11*p22*p34 - p11*p24*p32 - p12*p21*p34 + p12*p24*p31 + p14*p21*p32 - p14*p22*p31))/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)^2, -(p11*p22 - p12*p21)/(p11*p22*p33 - p11*p23*p32 - p12*p21*p33 + p12*p23*p31 + p13*p21*p32 - p13*p22*p31)];


%non homogeneous
J2=[[                 0, p23*p34 - p24*p33, p24*p32 - p22*p34, p22*p33 - p23*p32,                 0, p14*p33 - p13*p34, p12*p34 - p14*p32, p13*p32 - p12*p33,                 0, p13*p24 - p14*p23, p14*p22 - p12*p24, p12*p23 - p13*p22];
[ p24*p33 - p23*p34,                 0, p21*p34 - p24*p31, p23*p31 - p21*p33, p13*p34 - p14*p33,                 0, p14*p31 - p11*p34, p11*p33 - p13*p31, p14*p23 - p13*p24,                 0, p11*p24 - p14*p21, p13*p21 - p11*p23];
[ p22*p34 - p24*p32, p24*p31 - p21*p34,                 0, p21*p32 - p22*p31, p14*p32 - p12*p34, p11*p34 - p14*p31,                 0, p12*p31 - p11*p32, p12*p24 - p14*p22, p14*p21 - p11*p24,                 0, p11*p22 - p12*p21];
[ p23*p32 - p22*p33, p21*p33 - p23*p31, p22*p31 - p21*p32,                 0, p12*p33 - p13*p32, p13*p31 - p11*p33, p11*p32 - p12*p31,                 0, p13*p22 - p12*p23, p11*p23 - p13*p21, p12*p21 - p11*p22,                 0]];

Cov_t=J*cov_P*J';